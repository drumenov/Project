@model X.PagedList.PagedList<CustomerViewModel>

<div class="card">
    <div class="card-header">
        All Customers
    </div>
    <div class="card-body">
        @foreach (var customer in Model) {
            <p class="card-text">
                <a asp-action="@StringConstants.ActionNameCustomerDetails"
                   asp-controller="@StringConstants.CustomerControllerName"
                   asp-area="@StringConstants.AreaNameAdministration"
                   asp-route-customerName="@customer.Username">
                        @customer.Username
                </a>
            </p>
        }
        @if (Model.Count != 0) {
            @Html.PagedListPager(Model, page => Url.Action(StringConstants.ActionNameIndex, StringConstants.HomeControllerName, new {
            adminsPage = TempData[StringConstants.TempDataKeyHoldingThePageNumberForAdministrators],
            customersPage = page,
            techniciansPage = TempData[StringConstants.TempDataKeyHoldingThePageNumberForTechnicians],
            pendingRepairTasks = TempData[StringConstants.TempDataKeyHoldingThePageNumberForPendingRepairTasks],
            workedOnRepairTasksPage = TempData[StringConstants.TempDataKeyHoldingThePageForWorkedOnRepairTasks],
            finishedRepairTasksPage = TempData[StringConstants.TempDataKeyHoldingThePageForFinishedRepairTasks]}), 
            new X.PagedList.Mvc.Common.PagedListRenderOptions {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" }
            })
         }
    </div>
</div>

