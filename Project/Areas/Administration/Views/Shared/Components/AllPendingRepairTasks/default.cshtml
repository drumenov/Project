@model X.PagedList.PagedList<RepairTaskSimpleInfoViewModel>

<div class="card">
    <div class="card-header">
        All Pending Repair Tasks to be Assigned
    </div>
    <div class="card-body">
        @foreach (var order in Model) {
            <div class="card-text d-flex justify-content-around">
                <a asp-action="@StringConstants.ActionNameCustomerDetails"
                    asp-controller="@StringConstants.CustomerControllerName"
                    asp-area="@StringConstants.AreaNameAdministration"
                    asp-route-customerName="@order.Username">
                        @order.Username
                </a>
                <a asp-action="@StringConstants.ActionNameRepairTaskDetails"
                   asp-controller="@StringConstants.RepairTaskControllerName"
                   asp-area="@StringConstants.AreaNameAdministration"
                   asp-route-id="@order.Id">
                    @order.Id
                </a>
                <a class="btn btn-primary @(order.CanBeAssigned == true ? String.Empty : "disabled")"
                   asp-action="@StringConstants.ActionNameAssignTask"
                   asp-controller="@StringConstants.RepairTaskControllerName"
                   asp-route-id="@order.Id">
                    Assign Task
                </a>
            </div>
            @foreach (string message in order.PartsMissingMeesage) {
                <span class="small text-danger">@message</span>
            }

        }
        @if (Model.Count != 0) {
            @Html.PagedListPager(Model, page => Url.Action(StringConstants.ActionNameIndex, StringConstants.HomeControllerName, new {
            adminsPage = TempData[StringConstants.TempDataKeyHoldingThePageNumberForAdministrators],
            customersPage = TempData[StringConstants.TempDataKeyHoldingThePageNumberForCustomers],
            techniciansPage = TempData[StringConstants.TempDataKeyHoldingThePageNumberForTechnicians],
            pendingRepairTasksPage = page,
            workedOnRepairTasksPage = TempData[StringConstants.TempDataKeyHoldingThePageForWorkedOnRepairTasks],
            finishedRepairTasksPage = TempData[StringConstants.TempDataKeyHoldingThePageForFinishedRepairTasks]
            }), new X.PagedList.Mvc.Common.PagedListRenderOptions {
                LiElementClasses = new string[] {"page-item"},
                PageClasses = new string[] {"page-link"}
            })
        }
    </div>
</div>



