@model X.PagedList.PagedList<RepairTaskViewModel>

<div class="card">
    <div class="card-header">
        All Finished Repair Tasks
    </div>
    <div class="card-body">
        @foreach (var finishedRepairTask in Model) {
        <div class="d-flex justify-content-between">
            <p class="card-text">
                <a asp-action="@StringConstants.ActionNameCustomerDetails"
                    asp-controller="@StringConstants.CustomerControllerName"
                    asp-area="@StringConstants.AreaNameAdministration"
                    asp-route-customerName="@finishedRepairTask.Username">
                    @finishedRepairTask.Username
                </a>
            </p>
            <p class="card-text">
                <a asp-action="@StringConstants.ActionNameRepairTaskDetails"
                    asp-controller="@StringConstants.RepairTaskControllerName"
                    asp-area="@StringConstants.AreaNameAdministration"
                    asp-route-id="@finishedRepairTask.Id">
                    @finishedRepairTask.Id
                </a>
            </p>
            <a class="btn btn-outline-info" asp-action="@StringConstants.ActionNameRepairTaskReceipt"
                                            asp-controller="@StringConstants.RepairTaskControllerName"
                                            asp-area="@StringConstants.AreaNameAdministration"
                                            asp-route-id="@finishedRepairTask.Id">
                View Receipt
            </a>
        </div>
        }
        @if (Model.Count != 0) {
            @Html.PagedListPager(Model, page => Url.Action(StringConstants.ActionNameIndex, StringConstants.HomeControllerName, new {
            adminsPage = TempData[StringConstants.TempDataKeyHoldingThePageNumberForTechnicians],    
            customersPage = TempData[StringConstants.TempDataKeyHoldingThePageNumberForCustomers],
            techniciansPage = TempData[StringConstants.TempDataKeyHoldingThePageNumberForTechnicians],
            pendingRepairTasks = TempData[StringConstants.TempDataKeyHoldingThePageNumberForPendingRepairTasks],
            workedOnRepairTasksPage = TempData[StringConstants.TempDataKeyHoldingThePageForWorkedOnRepairTasks],
            finishedRepairTasksPage = page }), 
            new X.PagedList.Mvc.Common.PagedListRenderOptions {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" }
                })
            }
    </div>
</div>

