@model FeedbackInputModel
@inject Microsoft.AspNetCore.Identity.UserManager<Project.Models.Entities.User> userManager

<div class="container text-center">
    <h1>Your Feedback</h1>
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <label asp-for="@Model.Content"></label>
    <form method="post"
          asp-action="@(String.IsNullOrEmpty(Model.Content) 
              ? StringConstants.ActionNameGiveFeedbackForARepairTask 
              : StringConstants.ActionNameEditFeedbackForARepairTask)"
          asp-controller="@StringConstants.FeedbackControllerName"
          asp-area="@StringConstants.AreaNameCustomer"
          asp-route-id="@Model.RepairTaskId">
        <input type="hidden" asp-for="@Model.RepairTaskId" value="@Model.RepairTaskId" />
        <input type="hidden" asp-for="@Model.UserId" value="@(userManager.FindByNameAsync(User.Identity.Name).GetAwaiter().GetResult().Id)" />
        <textarea asp-for="@Model.Content" cols="40">@Model.Content</textarea>
        <div class="d-block justify-content-end">
            <input type="submit" value="@(String.IsNullOrEmpty(Model.Content) == true 
                                            ? "Give Feedback" 
                                            : "Edit Feedback")" class="btn btn-primary" />
        </div>
    </form>
</div>